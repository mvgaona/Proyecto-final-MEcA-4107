ascensor_aux4<-str_detect( Descripc_train,"elevador")
ascensor_aux5<-str_detect( Descripc_train,"ascensores")
ascensor_aux6<-str_detect( Descripc_train,"acensores")
ascensor_aux7<-str_detect( Descripc_train,"asensores")
ascensor_aux8<-str_detect( Descripc_train,"elevadores")
ascensorT<-ifelse(ascensor_aux1==TRUE|ascensor_aux2==TRUE| ascensor_aux3==TRUE|ascensor_aux4==TRUE|ascensor_aux5==TRUE|ascensor_aux6==TRUE|ascensor_aux7==TRUE|ascensor_aux8==TRUE, 1,0 )
ascensorT<-data.frame(ascensorT)
ascensorT[is.na(ascensorT)] = 0
DTRAIN <- cbind(DTRAIN, ascensorT)
rm(ascensorT)
table(DTRAIN$l3)
table(DTEST$l3)
table(is.na(DTRAIN$surface_total))
table(is.na(DTRAIN$surface_covered))
#Para área
pat_1 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+m2" ## patrón para área
pat_2 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+m2"
pat_3<-"[:space:]+[:digit:]+[:space:]+metros"
pat_4<-"[:space:]+[:digit:]+metros"
pat_5 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+mts"
pat_6 <- "[:space:]+[:digit:]+mts"
pat_7 <- "[:space:]+[:digit:]+[:space:]+mts"
pat_8<-"[:space:]+[:digit:]+m^2"
pat_9 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+m^2"
pat_10 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+mtrs"
pat_11 <- "[:space:]+[:digit:]+mtrs"
pat_12 <- "[:space:]+[:digit:]+[:space:]+mtrs"
pat_13 <- "[:space:]+[:digit:]+[:space:]+[:punct:]+[:digit:]+[:space:]+mts"
pat_14 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+mt"
pat_15 <- "[:space:]+[:digit:]+mt"
pat_16 <- "[:space:]+[:digit:]+[:space:]+mt"
pat_17 <- "[:space:]+[:digit:]+[:space:]+[:punct:]+[:digit:]+[:space:]+mts2"
pat_18 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+mts2"
pat_19 <- "[:space:]+[:digit:]+mts2"
pat_20 <- "[:space:]+[:digit:]+[:space:]+mts2"
pat_21 <- "[:space:]+[:digit:]+[:space:]+[:punct:]+[:digit:]+mts2"
pat_22 <- "[:space:]+[:digit:]+[:space:]+[:punct:]+[:digit:]+[:space:]+metros cuadrados"
pat_23 <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+metros cuadrados"
pat_24 <- "[:space:]+[:digit:]+metros cuadrados"
pat_25 <- "[:space:]+[:digit:]+[:space:]+metros cuadrados"
pat_26 <- "[:space:]+[:digit:]+[:space:]+[:punct:]+[:digit:]+[:space:]+metros cuadrados"
DTRAIN <- DTRAIN  %>%
mutate(area_total= str_extract(string=DTRAIN$description , pattern= paste0(pat_1,"|",pat_2,"|", pat_3,"|", pat_4,"|", pat_5,"|", pat_6,"|", pat_7,"|", pat_8,"|", pat_9,"|", pat_10,"|", pat_11,"|", pat_12,"|", pat_13,"|", pat_14,"|", pat_15,"|", pat_16,"|", pat_17,"|", pat_18,"|", pat_19,"|", pat_20,"|", pat_21,"|", pat_22,"|", pat_23,"|", pat_24,"|", pat_25,"|", pat_26) ))
View(DTRAIN$area_total)
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "," , replacement = ".")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "m2" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "mts" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "mtrs" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "metros" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "m^2" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "mt" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "metros cuadrados" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "cuadrados" , replacement = "")
DTRAIN$area_total<-str_replace_all(string = DTRAIN$area_total, pattern = "\n" , replacement = "")
DTRAIN$area_total<-as.numeric(DTRAIN$area_total)
table(DTRAIN$area_total)
summary(DTRAIN$area_total)
mnzBog<-readRDS("C:/Users/valer/Desktop/Andes/Intersemestral/Big Data/ArchivoPS3/Bogota.rds") #Datos de manzanas Bogotá
mnzAnt<-readRDS("C:/Users/valer/Desktop/Andes/Intersemestral/Big Data/ArchivoPS3/Antioquia.rds") #Datos de manzanas Antioquia
mnzBogota<-subset(mnzBog, select=c("MANZ_CCNCT", "geometry"))
mnzAntioquia<-subset(mnzAnt, select=c("MANZ_CCNCT", "geometry"))
DTRAIN_sf <- DTRAIN %>% st_as_sf(coords = c("lon", "lat"), crs = 4326)
DTRAIN_Bog<- DTRAIN_sf[DTRAIN_sf$l3=="Bogotá D.C",]
DTRAIN_Med<- DTRAIN_sf[DTRAIN_sf$l3=="Medellín",]
##
DTRAIN_Bog<- DTRAIN_sf[DTRAIN_sf$l3=="Bogotá D.C",]
DTRAIN_Med<- DTRAIN_sf[DTRAIN_sf$l3=="Medellín",]
require("tidyverse")
require("sf")
mnzBog$MANZ_CCNCT<-NULL
mnzBog<-st_join(mnzBog,mnzBogota,join = st_intersects)
sum(is.na(mnzBog$MANZ_CCNCT))
sf::sf_use_s2(FALSE)
mnzBogota<-st_transform(mnzBogota, 4326)
DTRAIN_Bog<-DTRAIN_Bog %>% st_as_sf(coords = c("lon", "lat"), crs = 4326)
st_crs(mnzBogota) == st_crs(DTRAIN_Bog)
leaflet() %>% addTiles() %>% addPolygons(data=mnzBogota , color="red") %>% addCircles(data=DTRAIN_Bog, color = "blue")
Casa_mnz = st_join(x = DTRAIN_Bog,y = mnzBogota)
DTRAIN_Bog_NA<-Casa_mnz[is.na(Casa_mnz$MANZ_CCNCT),]
#Se crea vector para tener los datos de las filas de las manzanas más cercanas a los NA
Distancia_cercana<-c(1:nrow(DTRAIN_Bog_NA))
#Distancia_cercana<-
st_nn(DTRAIN_Bog_NA, mnzBogota, k = 1, maxdist = 50, progress=TRUE)
summary(Distancia_cercana)
#Se realiza un for para que se haga la función st_nn para cada dato de apartamentos con NA y se compara con las manzanas Bogotá
#Se demora mucho este proceso
for (i in 1:nrow(DTRAIN_Bog_NA)){ #Realizar la distancia mínima para los NAs
Distancia_cercana[i]<-st_nn(DTRAIN_Bog_NA[i,], mnzBogota, k = 1, maxdist = 50, progress=TRUE)
}
DTRAIN_Med<-DTRAIN_Med %>% st_as_sf(coords = c("lon", "lat"), crs = 4326)
st_crs(mnzAntioquia) == st_crs(DTRAIN_Med)
Casa_mnz_Med = st_join(x = DTRAIN_Med,y = mnzAntioquia)
DTRAIN_Med_NA<-Casa_mnz[is.na(Casa_mnz_Med$MANZ_CCNCT),]
summary(DTRAIN_Med_NA)
summary(DTRAIN_Med_NA$area_total)
Distancia_cercana_Med<-c(1:nrow(DTRAIN_Med_NA))
for (i in 1:nrow(DTRAIN_Med_NA)){ #Realizar la distancia mínima para los NAs
Distancia_cercana_Med[i]<-st_nn(DTRAIN_Med_NA[i,], mnzAntioquia, k = 1, maxdist = 50, progress=FALSE)
}
#
Distancia_cercana<-st_nn(DTRAIN_Bog_NA, mnzBogota, k = 1, maxdist = 0.0005, progress=TRUE)
require(pacman)
p_load(caret,
Matrix,
recipes,
rio, #Instalar librerías que falten
tidyverse,
glmnet,
dplyr,
readr,
gamlr,
tidymodels,
ggplot2,
scales,
ggpubr,
skimr,
rvest,
caret,
stringr,
boot,
caret,
modeest,
recipes,
glmnet,
stargazer,
pROC,
sf,
leaflet,
tmaptools,
nngeo,
osmdata)
DTEST<-data.frame(readRDS("C:/Users/valer/Desktop/Andes/Intersemestral/Big Data/ArchivoPS3/test.rds"))  #Guardar las bases de datos
DTRAIN <- data.frame(readRDS("C:/Users/valer/Desktop/Andes/Intersemestral/Big Data/ArchivoPS3/train.rds"))
train<- DTRAIN %>% mutate(base = "train")
test <- DTEST %>% mutate(base="test")
HOUSE<- bind_rows(train,test) %>% st_as_sf(coords=c("lon","lat"),crs=4326)
leaflet() %>% addTiles() %>% addCircles(data = HOUSE)
str(HOUSE)
table(DTEST$l3)
#Medellin
PolPoblado <- getbb(place_name = "Comuna 14 - El Poblado, Medellín",
featuretype = "boundary:administrative",
format_out = "sf_polygon")
PolPoblado <- st_transform(PolPoblado, st_crs(HOUSE))
House_Poblado<- HOUSE[PolPoblado,]
available_features()
available_tags("amenity")
mnzAnt<-readRDS("C:/Users/valer/Desktop/Andes/Intersemestral/Big Data/ArchivoPS3/Antioquia.rds") #Datos de manzanas Antioquia
sf_use_s2(FALSE)
mnzMedellin<-subset(mnzAnt, select=c("MANZ_CCNCT", "geometry"))
mnz_pob <- mnzMedellin[PolPoblado,]
leaflet() %>% addTiles() %>% addCircles(data = House_Poblado, color = "red" ) %>% addPolygons(data= mnz_pob, col = "blue")
house_pob_mnz <- st_join(House_Poblado, mnz_pob)
colnames(house_pob_mnz)
table(is.na(house_pob_mnz$MANZ_CCNCT))
db_1M <- house_pob_mnz %>% subset(is.na(MANZ_CCNCT)==F)
db_2M<- house_pob_mnz %>% subset(is.na(MANZ_CCNCT)==T) %>% mutate(MANZ_CCNCT = NULL)
leaflet() %>% addTiles() %>% addPolygons(data=db_2M[1,] %>% st_buffer(dist = 0.0005))
db_2M <- st_join(st_buffer(db_2M, dist = 0.0005), mnz_pob)%>% subset(duplicated(property_id)==F)
table(is.na(db_2M$MANZ_CCNCT))
db2M_NA_Med<-db_2M[is.na(db_2M$MANZ_CCNCT),]
Distancia_cercana_mnzMed<-st_nn(db2M_NA_Med, mnzMedellin, k = 1, maxdist =  0.0005, progress=TRUE)
library(pacman)
p_load(topicmodels,
tm,
tidytext,
tidyverse)
data("AssociatedPress")
class(AssociatedPress)
tidy(AssociatedPress)
ap_td<- tidy(AssociatedPress)
get_sentiments("bing")
ap%>%
inner_join(get_sentiments("bing")), by ("term"= "word"))
ap_td%>%
inner_join(get_sentiments("bing")), by ("term"= "word"))
ap_td%>%
inner_join(get_sentiments("bing")) by = ("term"= "word"))
ap_td%>%
inner_join(get_sentiments("bing")), by = ("term"= "word"))
ap_td%>%
inner_join(get_sentiments("bing")), by = c("term"= "word"))
ap_td%>%
inner_join(get_sentiments("bing")),
by = c("term"= "word"))
ap_td%>%
inner_join(get_sentiments("bing")),
by = c(term= "word"))
ap_td%>%
inner_join(get_sentiments("bing"),
by = c(term= "word"))
sentimientos %>%
group_by(document)%>%
count(sentiment)
sentimientos<- ap_td%>%
inner_join(get_sentiments("bing"),
by = c(term= "word"))
sentimientos %>%
group_by(document)%>%
count(sentiment)
sentimientos %>%
count(sentimient, term, wt = count)
sentimientos %>%
count(sentiment, term, wt = count)
sentimientos %>%
count(sentiment, term, wt = count)%>%
ungroup()%>%
filter(n>200)%>%
mutate(n = ifelse(sentiment== "negative", -n,n))%>%
mutate(term = reorder(term, n))%>%
ggplot(aes(n,term, fill= sentiment))+
geom_col()
#LDA
ap_lda<- LDA(AssociatedPress, k = 2, control = list(seed = 1234))
ap_lda
#prob topico por palabra
ap_topics<- tidy(ap_lda, matrix = "beta")
ap_topics_terms %>%
group_by(topic)%>%
slice_max(beta, n = 10)%>%
ungroup()%>%
arrange(topic,beta)
ap_topics %>%
group_by(topic)%>%
slice_max(beta, n = 10)%>%
ungroup()%>%
arrange(topic,beta)
ap_top_terms %>%
group_by(topic)%>%
slice_max(beta, n = 10)%>%
ungroup()%>%
arrange(topic,beta)
ap_tiop_terms<- ap_topics %>%
group_by(topic)%>%
slice_max(beta, n = 10)%>%
ungroup()%>%
arrange(topic,beta)
scale_y_reordered()
#Log-Ratio: log en base 2 importantísismo Log_2(b2/b1)
log(2/1)
#Log-Ratio: log en base 2 importantísismo Log_2(b2/b1)
log2(2/1)
log2(1/2)
ap_topics%>%
mutate(topic = paste("topic", topic))%>%
pivot_wider(names_from = "topic", values_from = "beta")
beta_wide<- ap_topics%>%
mutate(topic = paste("topic", topic))%>%
pivot_wider(names_from = "topic", values_from = "beta")%>%
filter(topic1 > 1/100| topic2>1/1000)%>%
mutate(log_ratio = log2(topic2/topic1))
beta_wide<- ap_topics%>%
mutate(topic = paste("topic", topic))%>%
pivot_wider(names_from = "topic", values_from = "beta")%>%
filter(topic1 > 1/1000| topic2 >1/1000)%>%
mutate(log_ratio = log2(topic2/topic1))
beta_wide<- ap_topics%>%
mutate(topic = paste("topic", topic))%>%
pivot_wider(names_from = "topic", values_from = "beta")%>%
filter(topic1 > 1/1000 | topic2 >1/1000)%>%
mutate(log_ratio = log2(topic2/topic1))
`rlang::last_error()
rlang::last_error()
beta_wide<- ap_topics%>%
mutate(topic = paste("topic", topic))%>%
pivot_wider(names_from = "topic", values_from = "beta")%>%
filter(topic1 > 1/1000 | topic2 > 1/1000)%>%
mutate(log_ratio = log2(topic2/topic1))
ap_tiop_terms2 <- beta_wide%>%
slice_max(
log_ratio, n = 10) %>%
rbind(beta_wide %>%
slice_max(log_ratio, n = 10
)
)
ggplot(ap_tiop_terms2, aes(x= log_ratio, y = reorder(term, log_ratio)))+ geom_col(show.legend = F)
ggplot(ap_tiop_terms2, aes(x= log_ratio, y = reorder(term, log_ratio)))+ geom_col(show.legend = F)
ap_documents<- tidy(alpha, matrix = "gamma")
tidy(AssociatedPress)%>%
filter(document ==6)%>%
arrange(desc(count))
p_load(Matrix,
recipes,
rio,
tidyverse,
glmnet,
dplyr,
readr,
gamlr,
tidymodels,
ggplot2,
scales,
rvest,
stringr,
boot,
modeest,
stargazer,
sf,
leaflet,
tmaptools,
class,
rgeos,
nngeo,
osmdata,
randomForest,
xgboost,
nnls,
forecast,
zoo,
BiocManager,
readxl,
reshape2,
data.table,
ranger, SuperLearner)
library(pacman) #Llamar librería#Se cargan las librerías a usar en el presente Problem Set
p_load(Matrix,
recipes,
rio,
tidyverse,
glmnet,
dplyr,
readr,
gamlr,
tidymodels,
ggplot2,
scales,
rvest,
stringr,
boot,
modeest,
stargazer,
sf,
leaflet,
tmaptools,
class,
rgeos,
nngeo,
osmdata,
randomForest,
xgboost,
nnls,
forecast,
zoo,
BiocManager,
readxl,
reshape2,
data.table,
ranger, SuperLearner)
### Base oficial
BASEOF<- readRDS("../Datos/Bases oficiales/Base_de_datos_oficial.rds")
setwd("C:/Users/valer/Desktop/Andes/Intersemestral/Big Data/Proyecto final/Proyecto-final-MEcA-4107/Script")
BASEOF<- readRDS("../Datos/Bases oficiales/Base_de_datos_oficial.rds")
#Se transforman a números los siguientes
cols.num<-c('PBN0', 'PBN1', 'PBN2', 'PBN3', 'PBN4', 'PBN5', 'PBN6', 'PBN7', 'PBN8', 'PBN9', 'PBN10', 'PBN11', 'PBN12', 'PBN13', 'PBN14', 'PBN15', 'PBN16', 'PBN17', 'PBN18', 'PBN19', 'PBN20', 'PBN21', 'PBN22', 'PBN23', 'ONI')
BASEOF[cols.num] <- sapply(BASEOF[cols.num],as.numeric)
sapply(BASEOF, class)
train <- BASEOF[1:5751, ] # initial data
pred <- BASEOF[(5752:8217), ] # extended time index
x_train0 <- model.matrix(PBN0 ~Gen_CoGenerador0+ Gen_Hidraulica0 + Gen_Termica0 + Gen_Eolica0 + Gen_Solar0 + ONI +TRM + Aportes_total, data =train)[, -1]
y_train0 <- train$PBN0
x_test0 <- model.matrix(PBN0~Gen_CoGenerador0+ Gen_Hidraulica0 + Gen_Termica0 + Gen_Eolica0 + Gen_Solar0 + ONI + TRM + Aportes_total, data =pred)[, -1]
y_test0 <- pred$PBN0
xgb_train0 <- xgb.DMatrix(data = x_train0, label = y_train0)
xgb_test0 <- xgb.DMatrix(data = x_test0, label = y_test0) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist0 <-list(train=xgb_train0, test=xgb_test0)
model0<- xgb.train(data = xgb_train0, max.depth = 50, watchlist=watchlist0, nrounds = 100)
predicciones_mod0 <-predict(model0, xgb_test0)
predicciones_mod0<- data.frame(predicciones_mod0)
View(predicciones_mod0)
##-------1 hs----##
x_train1 <- model.matrix(PBN1 ~Gen_CoGenerador1+ Gen_Hidraulica1 + Gen_Termica1 + Gen_Eolica1 + Gen_Solar1 + ONI +TRM + Aportes_total, data =train)[, -1]
y_train1 <- train$PBN1
x_test1 <- model.matrix(PBN1~Gen_CoGenerador1+ Gen_Hidraulica1 + Gen_Termica1 + Gen_Eolica1 + Gen_Solar1 + ONI + TRM + Aportes_total, data =pred)[, -1]
y_test1 <- pred$PBN1
xgb_train1 <- xgb.DMatrix(data = x_train1, label = y_train1)
xgb_test1 <- xgb.DMatrix(data = x_test1, label = y_test1) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist1 <-list(train=xgb_train1, test=xgb_test1)
model1<- xgb.train(data = xgb_train1, max.depth = 100, watchlist=watchlist1, nrounds = 1000)
predicciones_mod1 <-predict(model1, xgb_test1)
predicciones_mod1<- data.frame(predicciones_mod1)
View(predicciones_mod1)
##----2 hs----##
x_train2 <- model.matrix(PBN2 ~Gen_CoGenerador2 + Gen_Hidraulica2 + Gen_Termica2 + Gen_Eolica2 + Gen_Solar2 + ONI +TRM + Aportes_total, data =train)[, -1]
y_train2 <- train$PBN2
x_test2 <- model.matrix(PBN2~Gen_CoGenerador2+ Gen_Hidraulica2 + Gen_Termica2 + Gen_Eolica2 + Gen_Solar2 + ONI + TRM + Aportes_total, data =pred)[, -1]
y_test2 <- pred$PBN2
xgb_train2 <- xgb.DMatrix(data = x_train2, label = y_train2)
xgb_test2 <- xgb.DMatrix(data = x_test2, label = y_test2) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist2 <-list(train=xgb_train2, test=xgb_test2)
model2<- xgb.train(data = xgb_train2, max.depth = 100, watchlist=watchlist2, nrounds = 1000)
predicciones_mod2 <-predict(model2, xgb_test2)
predicciones_mod2<- data.frame(predicciones_mod2)
##----3 hs----##
x_train3 <- model.matrix(PBN3 ~Gen_CoGenerador3 + Gen_Hidraulica3 + Gen_Termica3 + Gen_Eolica3 + Gen_Solar3 + ONI +TRM + Aportes_total, data =train)[, -1]
y_train3 <- train$PBN3
x_test3 <- model.matrix(PBN3~Gen_CoGenerador3+ Gen_Hidraulica3 + Gen_Termica3 + Gen_Eolica3 + Gen_Solar3 + ONI + TRM + Aportes_total, data =pred)[, -1]
y_test3 <- pred$PBN3
xgb_train3 <- xgb.DMatrix(data = x_train3, label = y_train3)
xgb_test3 <- xgb.DMatrix(data = x_test3, label = y_test3) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist3 <-list(train=xgb_train3, test=xgb_test3)
model3<- xgb.train(data = xgb_train3, max.depth = 100, watchlist=watchlist3, nrounds = 1000)
predicciones_mod3 <-predict(model3, xgb_test3)
predicciones_mod3<- data.frame(predicciones_mod3)
##----4 hs----##
x_train4 <- model.matrix(PBN4~Gen_CoGenerador4+ Gen_Hidraulica4 + Gen_Termica4 + Gen_Eolica4 + Gen_Solar4+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train4 <- train$PBN4
x_test4 <- model.matrix(PBN4~Gen_CoGenerador4+ Gen_Hidraulica4 + Gen_Termica4 + Gen_Eolica4 + Gen_Solar4 + ONI + TRM + Aportes_total, data =pred)[, -1]
y_test4 <- pred$PBN4
xgb_train4 <- xgb.DMatrix(data = x_train4, label = y_train4)
xgb_test4 <- xgb.DMatrix(data = x_test4, label = y_test4) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist4 <-list(train=xgb_train4, test=xgb_test4)
model4<- xgb.train(data = xgb_train4, max.depth = 100, watchlist=watchlist4, nrounds = 1000)
predicciones_mod4 <-predict(model4, xgb_test4)
predicciones_mod4<- data.frame(predicciones_mod4)
##----5 hs----#
x_train5 <- model.matrix(PBN5~Gen_CoGenerador5+ Gen_Hidraulica5 + Gen_Termica5 + Gen_Eolica5 + Gen_Solar5+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train5 <- train$PBN5
x_test5 <- model.matrix(PBN5~Gen_CoGenerador5+ Gen_Hidraulica5 + Gen_Termica5 + Gen_Eolica5 + Gen_Solar5+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test5 <- pred$PBN5
xgb_train5 <- xgb.DMatrix(data = x_train5, label = y_train5)
xgb_test5 <- xgb.DMatrix(data = x_test5, label = y_test5) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist5 <-list(train=xgb_train5, test=xgb_test5)
model5<- xgb.train(data = xgb_train5, max.depth = 100, watchlist=watchlist5, nrounds = 1000)
predicciones_mod5 <-predict(model5, xgb_test5)
predicciones_mod5<- data.frame(predicciones_mod5)
predicciones_mod6<- data.frame(predicciones_mod6)
##----6 hs----##
x_train6 <- model.matrix(PBN6~Gen_CoGenerador6+ Gen_Hidraulica6 + Gen_Termica5 + Gen_Eolica6 + Gen_Solar6+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train6 <- train$PBN6
x_test6 <- model.matrix(PBN6~Gen_CoGenerador6+ Gen_Hidraulica6 + Gen_Termica5 + Gen_Eolica6 + Gen_Solar6+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test6 <- pred$PBN6
xgb_train6 <- xgb.DMatrix(data = x_train6, label = y_train6)
xgb_test6 <- xgb.DMatrix(data = x_test6, label = y_test6) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist6 <-list(train=xgb_train6, test=xgb_test6)
model6<- xgb.train(data = xgb_train6, max.depth = 100, watchlist=watchlist6, nrounds = 1000)
predicciones_mod6 <-predict(model6, xgb_test6)
predicciones_mod6<- data.frame(predicciones_mod6)
##----7 hs----#
x_train7 <- model.matrix(PBN7~Gen_CoGenerador7+ Gen_Hidraulica7 + Gen_Termica7 + Gen_Eolica7 + Gen_Solar7+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train7 <- train$PBN7
x_test7 <- model.matrix(PBN7~Gen_CoGenerador7+ Gen_Hidraulica7 + Gen_Termica7 + Gen_Eolica7 + Gen_Solar7+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test7 <- pred$PBN7
xgb_train7 <- xgb.DMatrix(data = x_train7, label = y_train7)
xgb_test7 <- xgb.DMatrix(data = x_test7, label = y_test7) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist7 <-list(train=xgb_train7, test=xgb_test7)
model7<- xgb.train(data = xgb_train7, max.depth = 100, watchlist=watchlist7, nrounds = 1000)
predicciones_mod7 <-predict(model7, xgb_test7)
predicciones_mod7<- data.frame(predicciones_mod7)
##----8 hs----#
x_train8 <- model.matrix(PBN8~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train8 <- train$PBN8
x_test8 <- model.matrix(PBN88~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test8 <- pred$PBN8
xgb_train8 <- xgb.DMatrix(data = x_train8, label = y_train8)
xgb_test8 <- xgb.DMatrix(data = x_test8, label = y_test8) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist8 <-list(train=xgb_train8, test=xgb_test8)
model8<- xgb.train(data = xgb_train8, max.depth = 100, watchlist=watchlist8, nrounds = 1000)
predicciones_mod8 <-predict(model8, xgb_test8)
predicciones_mod8<- data.frame(predicciones_mod8)
##----8 hs----#
x_train8 <- model.matrix(PBN8~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train8 <- train$PBN8
x_test8 <- model.matrix(PBN88~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test8 <- pred$PBN8
xgb_train8 <- xgb.DMatrix(data = x_train8, label = y_train8)
xgb_test8 <- xgb.DMatrix(data = x_test8, label = y_test8) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist8 <-list(train=xgb_train8, test=xgb_test8)
##----8 hs----#
x_train8 <- model.matrix(PBN8~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train8 <- train$PBN8
x_test8 <- model.matrix(PBN88~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI + TRM + Aportes_total, data =pred)[, -1]
x_test8 <- model.matrix(PBN8~Gen_CoGenerador8+ Gen_Hidraulica8 + Gen_Termica8 + Gen_Eolica8 + Gen_Solar8+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test8 <- pred$PBN8
xgb_train8 <- xgb.DMatrix(data = x_train8, label = y_train8)
xgb_test8 <- xgb.DMatrix(data = x_test8, label = y_test8) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist8 <-list(train=xgb_train8, test=xgb_test8)
model8<- xgb.train(data = xgb_train8, max.depth = 100, watchlist=watchlist8, nrounds = 1000)
predicciones_mod8 <-predict(model8, xgb_test8)
predicciones_mod8<- data.frame(predicciones_mod8)
##----9 hs----##
x_train9 <- model.matrix(PBN9~Gen_CoGenerador9+ Gen_Hidraulica9 + Gen_Termica9 + Gen_Eolica9 + Gen_Solar9+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train9 <- train$PBN9
x_test9<- model.matrix(PBN9~Gen_CoGenerador9+ Gen_Hidraulica9 + Gen_Termica9 + Gen_Eolica9 + Gen_Solar9+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test9 <- pred$PBN9
xgb_train9 <- xgb.DMatrix(data = x_train9, label = y_train9)
xgb_test9 <- xgb.DMatrix(data = x_test9, label = y_test9) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist9 <-list(train=xgb_train9, test=xgb_test9)
model9<- xgb.train(data = xgb_train9, max.depth = 100, watchlist=watchlist9, nrounds = 1000)
predicciones_mod9 <-predict(model9, xgb_test9)
predicciones_mod9<- data.frame(predicciones_mod9)
##----10 hs----##
x_train10 <- model.matrix(PBN10~Gen_CoGenerador10+ Gen_Hidraulica10 + Gen_Termica10 + Gen_Eolica10 + Gen_Solar10+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train10 <- train$PBN10
x_test10 <- model.matrix(PBN10~Gen_CoGenerador10+ Gen_Hidraulica10 + Gen_Termica10 + Gen_Eolica10 + Gen_Solar10+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test10 <- pred$PBN10
xgb_train10 <- xgb.DMatrix(data = x_train10, label = y_train10)
xgb_test10<- xgb.DMatrix(data = x_test10, label = y_test10) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist10 <-list(train=xgb_train10, test=xgb_test10)
model10<- xgb.train(data = xgb_train10, max.depth = 100, watchlist=watchlist10, nrounds = 1000)
predicciones_mod10 <-predict(model10, xgb_test10)
predicciones_mod10<- data.frame(predicciones_mod10)
##----11 hs----##
x_train11 <- model.matrix(PBN11~Gen_CoGenerador11+ Gen_Hidraulica11 + Gen_Termica11 + Gen_Eolica11 + Gen_Solar11+ ONI +TRM + Aportes_total, data =train)[, -1]
y_train11 <- train$PBN11
x_test11 <- model.matrix(PBN11~Gen_CoGenerador11+ Gen_Hidraulica11 + Gen_Termica11 + Gen_Eolica11 + Gen_Solar11+ ONI + TRM + Aportes_total, data =pred)[, -1]
y_test11 <- pred$PBN11
xgb_train11 <- xgb.DMatrix(data = x_train11, label = y_train11)
xgb_test11 <- xgb.DMatrix(data = x_test11, label = y_test11) #Como se está haciendo sobre la misma base train, se pone el xgb_test como la misma base train
watchlist11 <-list(train=xgb_train11, test=xgb_test11)
model11<- xgb.train(data = xgb_train11, max.depth = 100, watchlist=watchlist11, nrounds = 1000)
predicciones_mod11 <-predict(model11, xgb_test11)
predicciones_mod11<- data.frame(predicciones_mod11)
